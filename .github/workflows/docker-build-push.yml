name: Build and Push Docker Image

# Trigger the workflow on:
# - Push to main branch
# - Manual workflow dispatch
# - New tags matching v*.*.*
on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag (optional, defaults to branch name)'
        required: false
        type: string

env:
  DOCKER_USERNAME: nervousmammoth2
  IMAGE_NAME: nervousmammoth2/neo4j-communication

jobs:
  build-and-push:
    name: Build and Push to Docker Hub
    runs-on: ubuntu-latest

    steps:
      # ================================================================
      # Step 1: Checkout code
      # ================================================================
      - name: Checkout code
        uses: actions/checkout@v4

      # ================================================================
      # Step 2: Set up Docker Buildx
      # ================================================================
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ================================================================
      # Step 3: Login to Docker Hub
      # ================================================================
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # ================================================================
      # Step 4: Extract metadata (tags, labels)
      # ================================================================
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            # Tag with branch name for branch pushes
            type=ref,event=branch
            # Tag with tag name for tag pushes
            type=ref,event=tag
            # Tag with semver for version tags (v1.2.3 -> 1.2.3, 1.2, 1)
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # Tag with 'latest' for main branch
            type=raw,value=latest,enable={{is_default_branch}}
            # Tag with custom input if provided
            type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event.inputs.tag != '' }}

      # ================================================================
      # Step 5: Build and push Docker image
      # ================================================================
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      # ================================================================
      # Step 6: Create summary
      # ================================================================
      - name: Create job summary
        run: |
          echo "## Docker Build & Push Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Image Information" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository**: ${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tags**: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Deployment" >> $GITHUB_STEP_SUMMARY
          echo "To deploy on production:" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "./scripts/deploy-production-docker.sh" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Or manually:" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
          echo "cd data-scripts && docker compose up -d" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
